{"version":3,"sources":["../../src/pages/monitor/monitor.module.ts","../../src/pages/monitor/monitor.ts","../../node_modules/rxjs/add/observable/interval.js","../../node_modules/rxjs/observable/interval.js","../../node_modules/rxjs/observable/IntervalObservable.js","../../node_modules/rxjs/util/isNumeric.js","../../node_modules/rxjs/scheduler/async.js","../../node_modules/rxjs/scheduler/AsyncAction.js","../../node_modules/rxjs/scheduler/Action.js","../../node_modules/rxjs/scheduler/AsyncScheduler.js","../../node_modules/rxjs/Scheduler.js"],"names":[],"mappings":"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;AACA;AACA,gCAAgC,YAAY;AAC5C,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,OAAO;AACtB;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,8C;;;;;;;;ACvFa;AACb,gBAAgB,mBAAO,CAAC,GAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;ACXa;AACb,oBAAoB,mBAAO,CAAC,GAAe;AAC3C,uBAAuB,mBAAO,CAAC,GAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;AC9Ca;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,aAAa,mBAAO,CAAC,EAAc;AACnC,eAAe,mBAAO,CAAC,GAAU;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;AC7Ia;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,qBAAqB,mBAAO,CAAC,EAAiB;AAC9C;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;AC3Ca;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,kBAAkB,mBAAO,CAAC,GAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;AClDa;AACb;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA,eAAe,OAAO;AACtB;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA,CAAC;AACD;AACA,qC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MonitorPage } from './monitor';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\n\n@NgModule({\n  declarations: [\n    MonitorPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MonitorPage),\n    ChartsModule\n  ],\n})\nexport class MonitorPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/monitor/monitor.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, Events } from 'ionic-angular';\nimport moment from 'moment';\nimport { Msg } from './Msg';\nimport 'rxjs/add/observable/interval';\nimport { Observable } from 'rxjs/Observable';\ndeclare var Paho : any;\n\n/**\n * Generated class for the MonitorPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-monitor',\n  templateUrl: 'monitor.html',\n})\nexport class MonitorPage {\n  private mqttStatus: string = 'Disconnected';\n  private mqttClient: any = null;\n  private message: any = '';\n  private currentMessage: Msg = null;\n  private messageToSend: string = 'Your message';\n  private topic: string = 'swen325/a3';\n  private clientId: string = 'bacordharr';\n  private sub: any;\n  private lastMotion: number = 0;\n  private lastLocation: string;\n  public barChartOptions:any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n  public barChartLabels:string[] = ['living room', 'kitchen', 'dining room', 'toilet', 'bedroom'];\n  public barChartType:string = 'hist';\n  public barChartLegend:boolean = true;\n  public barChartData:any[];\n\n  constructor(public events: Events, public navCtrl: NavController, private alertCtrl: AlertController) {\n    this.sub = Observable.interval(60000).subscribe(() => this.check())\n    this.lastLocation = \"Not yet found\"\n    this.lastMotion = 0;\n    this.barChartData = [\n      {data: [0, 1, 0, 0, 0], label: 'Frequencies'},\n    ]\n  }\n\n  public check = () => {\n    // Only update last motion time if we have connected\n    if(this.lastMotion != -1) {\n      this.lastMotion += 1;\n    }\n    if(this.lastMotion == 5) {\n      this.alert(\"No motion has been detected in the past 5 minutes. We strongly recommend you check the senior\")\n    }\n  }\n\n  public connect = () => {\n  \tthis.mqttStatus = 'Connecting...';\n  \tthis.mqttClient = new Paho.MQTT.Client('bacordharr@barretts.ecs.vuw.ac.nz', 8883, '/mqtt', this.clientId);\n\n  \t// set callback handlers\n  \tthis.mqttClient.onConnectionLost = this.onConnectionLost;\n  \tthis.mqttClient.onMessageArrived = this.onMessageArrived;\n\n  \t// connect the client\n  \tconsole.log('Connecting to mqtt via websocket');\n  \t//this.mqttClient.connect({timeout:10, userName:'ptweqash', password:'ncU6vlGPp1mN', useSSL:true, onSuccess:this.onConnect, onFailure:this.onFailure});\n  \tthis.mqttClient.connect({useSSL:false, onSuccess:this.onConnect, onFailure:this.onFailure});\n  }\n\n  public disconnect () {\n  \tif(this.mqttStatus == 'Connected') {\n  \t\tthis.mqttStatus = 'Disconnecting...';\n  \t\tthis.mqttClient.disconnect();\n  \t\tthis.mqttStatus = 'Disconnected';\n  \t}\n  }\n\n  public sendMessage = () => {\n  \tif(this.mqttStatus == 'Connected') {\n  \t\tthis.mqttClient.publish(this.topic, this.messageToSend);\n  \t}\n  }\n\n  public onConnect = () => {\n  \tconsole.log('Connected');\n  \tthis.mqttStatus = 'Connected';\n    this.lastMotion = 0;\n  \t// subscribe\n  \tthis.mqttClient.subscribe(this.topic);\n  }\n\n  public onFailure = (responseObject) => {\n  \tconsole.log('Failed to connect');\n  \tthis.mqttStatus = 'Failed to connect';\n  }\n\n  public onConnectionLost = (responseObject) => {\n   \tif (responseObject.errorCode !== 0) {\n   \t\tthis.mqttStatus = 'Disconnected';\n  \t}\n  }\n\n  public onMessageArrived = (message) => {\n  \tconsole.log('Received message ' + message.payloadString);\n  \tthis.message = message.payloadString;\n    let temp = message.payloadString;\n    // split message\n    let splitMessage = temp.split(',')\n\n    let location = splitMessage[1]\n    let motionStatus = splitMessage[2]\n    let batteryLevel = splitMessage[3]\n\n    // Motion detected\n    if(motionStatus == 1) {\n      this.lastMotion = 0;\n      this.lastLocation = location;\n      this.updateChart(location)\n    }\n\n    // // Send update to battery status tab\n    this.events.publish('battery_level_update',\n      { location , batteryLevel }\n    );\n  }\n\n  private updateChart(location: string) {\n    let clone = JSON.parse(JSON.stringify(this.barChartData));\n    switch(location) {\n      case 'living room':\n        clone[0].data[0] += 1;\n        break;\n\n      case 'kitchen':\n        clone[0].data[1] += 1;\n        break;\n\n      case 'dining room':\n        clone[0].data[2] += 1;\n        break;\n\n      case 'toilet':\n        clone[0].data[3] += 1;\n        break;\n\n      case 'bedroom':\n        clone[0].data[4] += 1;\n        break;\n    }\n\n    this.barChartData = clone;\n  }\n\n  private alert = (msg) => {\n    let alert = this.alertCtrl.create({\n      title: 'Alert',\n      subTitle: msg,\n      buttons: ['Dismiss']\n    });\n\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/monitor/monitor.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/interval.js\n// module id = 460\n// module chunks = 0","\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/interval.js\n// module id = 461\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/IntervalObservable.js\n// module id = 462\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isNumeric.js\n// module id = 463\n// module chunks = 0","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/async.js\n// module id = 464\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/AsyncAction.js\n// module id = 465\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/Action.js\n// module id = 466\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/AsyncScheduler.js\n// module id = 467\n// module chunks = 0","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/Scheduler.js\n// module id = 468\n// module chunks = 0"],"sourceRoot":""}